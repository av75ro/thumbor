name: Docker thumbor and remotecv

on:
  push:
    branches: [ "master" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: thumbor
            context: thumbor
          - name: remotecv
            context: remotecv
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get thumbor version from requirements
        id: thumbor_version
        shell: bash
        run: |
          set -eo pipefail
          LINE=$(grep -Ei '^thumbor(\[[^]]+\])?==[0-9][^#[:space:]]*' thumbor/requirements.txt | head -n1 || true)
          if [ -n "$LINE" ]; then
            VERSION=$(echo "$LINE" | sed -E 's/.*==([^#[:space:]]+).*/\1/')
          else
            echo "No explicit thumbor== version found in requirements; defaulting to latest" >&2
            VERSION=latest
          fi
          echo "VERSION=${VERSION}" >> "$GITHUB_OUTPUT"

      - name: Build and push ${{ matrix.name }} image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.name }}:latest
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.name }}:${{ steps.thumbor_version.outputs.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      - name: Sign the published image
        if: github.event_name != 'pull_request'
        env:
          IMG_LATEST: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.name }}:latest
          IMG_VERSION: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.name }}:${{ steps.thumbor_version.outputs.VERSION }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          cosign sign --yes ${IMG_LATEST}@${DIGEST}
          cosign sign --yes ${IMG_VERSION}@${DIGEST}
